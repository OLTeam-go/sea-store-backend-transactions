// Code generated by mockery v2.2.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "github.com/OLTeam-go/sea-store-backend-transactions/models"

	uuid "github.com/google/uuid"
)

// ItemRepository is an autogenerated mock type for the ItemRepository type
type ItemRepository struct {
	mock.Mock
}

// FetchByIDs provides a mock function with given fields: c, id
func (_m *ItemRepository) FetchByIDs(c context.Context, id []uuid.UUID) ([]*models.Item, error) {
	ret := _m.Called(c, id)

	var r0 []*models.Item
	if rf, ok := ret.Get(0).(func(context.Context, []uuid.UUID) []*models.Item); ok {
		r0 = rf(c, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Item)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, []uuid.UUID) error); ok {
		r1 = rf(c, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateQuantity provides a mock function with given fields: c, id, action
func (_m *ItemRepository) UpdateQuantity(c context.Context, id []uuid.UUID, action string) error {
	ret := _m.Called(c, id, action)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []uuid.UUID, string) error); ok {
		r0 = rf(c, id, action)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
